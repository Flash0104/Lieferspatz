"""Manually fixing restaurant_id constraint in item table

Revision ID: 72c3d83029c0
Revises: 
Create Date: 2025-02-01 04:28:12.252927

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '72c3d83029c0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### Commands auto-generated by Alembic - manually adjusted ###
    with op.batch_alter_table('item', schema=None) as batch_op:
        batch_op.add_column(sa.Column('restaurant_id', sa.Integer(), nullable=False))
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=150),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('description',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=True)

        # âœ… Add a named foreign key constraint
        batch_op.create_foreign_key(
            "fk_item_restaurant",  # ðŸ”¥ Explicitly named foreign key
            "restaurant",
            ["restaurant_id"],
            ["id"],
            ondelete="CASCADE"
        )

    # ### End Alembic commands ###


def downgrade():
    # ### Commands auto-generated by Alembic - manually adjusted ###
    with op.batch_alter_table('item', schema=None) as batch_op:
        # âœ… Use correct constraint name when dropping
        batch_op.drop_constraint("fk_item_restaurant", type_='foreignkey')

        batch_op.alter_column('description',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=150),
               existing_nullable=False)
        batch_op.drop_column('restaurant_id')

    # ### End Alembic commands ###
